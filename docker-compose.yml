version: '3.9'
services:
  postgres:
    image: postgres:16.1-alpine3.19
    environment:
      POSTGRES_DB: '${POSTGRES_DB:-fp_db}'
      POSTGRES_USER: '${POSTGRES_USER:-fp_db_admin}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD:-fp_db_admin}'
    command:
      - 'postgres'
      - '-c'
      - 'max_connections=50'
      - '-c'
      - 'shared_buffers=1GB'
      - '-c'
      - 'effective_cache_size=4GB'
      - '-c'
      - 'work_mem=16MB'
      - '-c'
      - 'maintenance_work_mem=512MB'
      - '-c'
      - 'random_page_cost=1.1'
      - '-c'
      - 'temp_file_limit=10GB'
      - '-c'
      - 'log_min_duration_statement=200ms'
      - '-c'
      - 'idle_in_transaction_session_timeout=10s'
      - '-c'
      - 'lock_timeout=1s'
      - '-c'
      - 'statement_timeout=60s'
      - '-c'
      - 'shared_preload_libraries=pg_stat_statements'
      - '-c'
      - 'pg_stat_statements.max=10000'
      - '-c'
      - 'pg_stat_statements.track=all'
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U fp_db_admin -d fp_db']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    env_file:
      - .env

  redis:
    image: redis:7.2.4-alpine
    container_name: redis
    command:
      - /bin/sh
      - -c
      # - Double dollars, so that the variable is not expanded by Docker Compose
      # - Surround by quotes, so that the shell does not split the password
      # - The ${variable:?message} syntax causes shell to exit with a non-zero
      #   code and print a message, when the variable is not set or empty
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    ports:
      - '6379:6379'
    env_file:
      - .env
